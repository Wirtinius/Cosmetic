{"ast":null,"code":"const useCreateCategory = async (value, imageFile) => {\n  console.log('Submitting:', {\n    value,\n    image: imageFile\n  });\n  const formData = new FormData();\n  formData.append('value', value);\n  formData.append('image', imageFile);\n  try {\n    const response = await fetch('http://localhost:3000/category/create', {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + window.localStorage.getItem('accessToken')\n      },\n      body: formData\n    });\n    if (response.ok) {\n      console.log('Category Creation Successful');\n      window.location.href = \"./\";\n      return {\n        success: true\n      };\n    } else {\n      const responseData = await response.json();\n      if (response.status === 400) {\n        return {\n          error: responseData\n        };\n      } else {\n        console.error('Category Creation failed:', responseData);\n        return {\n          error: 'Category Creation failed'\n        };\n      }\n    }\n  } catch (error) {\n    console.error('Error creating category:', error);\n  }\n};\nexport default useCreateCategory;","map":{"version":3,"names":["useCreateCategory","value","imageFile","console","log","image","formData","FormData","append","response","fetch","method","headers","window","localStorage","getItem","body","ok","location","href","success","responseData","json","status","error"],"sources":["/Users/alen/Desktop/freelance/cosmetic/Cosmetic-example/client/src/pages/Category/CategoryForm/handler/createCategoryHandler.jsx"],"sourcesContent":["const useCreateCategory = async (value, imageFile) => {\n    console.log('Submitting:', {\n        value,\n        image: imageFile, \n    });\n\n    const formData = new FormData();\n    formData.append('value', value);\n    formData.append('image', imageFile); \n    \n    try {\n        const response = await fetch('http://localhost:3000/category/create', {\n            method: 'POST',\n            headers: {\n                'Authorization': 'Bearer ' + window.localStorage.getItem('accessToken')\n            },\n            body: formData, \n        });\n\n        if (response.ok) {\n            console.log('Category Creation Successful');\n            window.location.href = \"./\";\n            return { success: true };\n        } else {\n            const responseData = await response.json();\n            if (response.status === 400) {\n                return { error: responseData };\n            } else {\n                console.error('Category Creation failed:', responseData);\n                return { error: 'Category Creation failed' };\n            }\n        }\n        \n    } catch (error) {\n        console.error('Error creating category:', error);\n    }\n};\n\nexport default useCreateCategory;\n"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,SAAS,KAAK;EAClDC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;IACvBH,KAAK;IACLI,KAAK,EAAEH;EACX,CAAC,CAAC;EAEF,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,KAAK,CAAC;EAC/BK,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,SAAS,CAAC;EAEnC,IAAI;IACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MAClEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,eAAe,EAAE,SAAS,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa;MAC1E,CAAC;MACDC,IAAI,EAAEV;IACV,CAAC,CAAC;IAEF,IAAIG,QAAQ,CAACQ,EAAE,EAAE;MACbd,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CS,MAAM,CAACK,QAAQ,CAACC,IAAI,GAAG,IAAI;MAC3B,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC5B,CAAC,MAAM;MACH,MAAMC,YAAY,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAC1C,IAAIb,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;QACzB,OAAO;UAAEC,KAAK,EAAEH;QAAa,CAAC;MAClC,CAAC,MAAM;QACHlB,OAAO,CAACqB,KAAK,CAAC,2BAA2B,EAAEH,YAAY,CAAC;QACxD,OAAO;UAAEG,KAAK,EAAE;QAA2B,CAAC;MAChD;IACJ;EAEJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZrB,OAAO,CAACqB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EACpD;AACJ,CAAC;AAED,eAAexB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}