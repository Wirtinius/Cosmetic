{"ast":null,"code":"const useRegister = async (username, email, gender, password, confirmPassword) => {\n  console.log('Submitting:', {\n    username,\n    email,\n    gender,\n    password,\n    confirmPassword\n  });\n  try {\n    const response = await fetch('http://localhost:3000/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        gender,\n        password,\n        confirmPassword\n      })\n    });\n    const responseData = await response.json();\n    if (response.ok) {\n      console.log('User Register Successful');\n      window.location.href = \"./\";\n      return {\n        success: true\n      };\n    } else {\n      if (response.status === 400) {\n        return {\n          error: responseData\n        };\n      } else {\n        console.error('Register User failed:', responseData);\n        return {\n          error: 'Register User failed'\n        };\n      }\n    }\n  } catch (error) {\n    console.error('Error during user register:', error);\n  }\n};\nexport default useRegister;","map":{"version":3,"names":["useRegister","username","email","gender","password","confirmPassword","console","log","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","window","location","href","success","status","error"],"sources":["/Users/alen/Desktop/freelance/cosmetic/Cosmetic-example/client/src/pages/User/Register/handler/registerHandler.jsx"],"sourcesContent":["const useRegister = async (username, email, gender, password, confirmPassword) => {\n    console.log('Submitting:', {\n        username,\n        email,\n        gender,\n        password,\n        confirmPassword\n    });\n\n    try {\n        const response = await fetch('http://localhost:3000/auth/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n              },\n            body: JSON.stringify({\n                    username,\n                    email,\n                    gender,\n                    password,\n                    confirmPassword}),\n        });\n\n        const responseData = await response.json();\n\n        if (response.ok) {\n            console.log('User Register Successful');\n            window.location.href = \"./\";\n            return { success: true };\n        } else {\n            if (response.status === 400) {\n                return { error: responseData };\n            } else {\n                console.error('Register User failed:', responseData);\n                return { error: 'Register User failed' };\n            }\n        }\n        \n    } catch (error) {\n        console.error('Error during user register:', error);\n    }\n};\n\nexport default useRegister;\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,eAAe,KAAK;EAC9EC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;IACvBN,QAAQ;IACRC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC;EACJ,CAAC,CAAC;EAEF,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MAClB,CAAC;MACHC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACbb,QAAQ;QACRC,KAAK;QACLC,MAAM;QACNC,QAAQ;QACRC;MAAe,CAAC;IAC5B,CAAC,CAAC;IAEF,MAAMU,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAE1C,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACbX,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCW,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAI;MAC3B,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC5B,CAAC,MAAM;MACH,IAAIb,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;QACzB,OAAO;UAAEC,KAAK,EAAER;QAAa,CAAC;MAClC,CAAC,MAAM;QACHT,OAAO,CAACiB,KAAK,CAAC,uBAAuB,EAAER,YAAY,CAAC;QACpD,OAAO;UAAEQ,KAAK,EAAE;QAAuB,CAAC;MAC5C;IACJ;EAEJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZjB,OAAO,CAACiB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACvD;AACJ,CAAC;AAED,eAAevB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}