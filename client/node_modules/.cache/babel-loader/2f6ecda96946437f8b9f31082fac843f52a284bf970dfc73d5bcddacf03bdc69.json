{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nconst useCreateProduct = async (name, description, price, category, countInStock, brand, image) => {\n  console.log('Submitting:', {\n    'name': name,\n    'description': description,\n    'price': price,\n    'category': category,\n    'countInStock': countInStock,\n    'brand': brand,\n    'image': image\n  });\n  try {\n    const response = await fetch('http://localhost:3000/product/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'name': name,\n        'description': description,\n        'price': price,\n        'category': category,\n        'countInStock': countInStock,\n        'brand': brand,\n        'image': image\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create product');\n    }\n    console.log('Product Creation Successful');\n    const data = await response.json();\n  } catch (error) {\n    console.error('Error creating product:', error);\n  }\n};\nexport default useCreateProduct;","map":{"version":3,"names":["jwtDecode","useCreateProduct","name","description","price","category","countInStock","brand","image","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error"],"sources":["/Users/alen/Desktop/freelance/cosmetic/Cosmetic-example/client/src/pages/ProductForm/handler/createProductHandler.jsx"],"sourcesContent":["import { jwtDecode } from 'jwt-decode';\n\nconst useCreateProduct = async (name, description, price, category, countInStock, brand, image) => {\n    console.log('Submitting:', {\n        'name': name,\n        'description': description,\n        'price': price,\n        'category': category,\n        'countInStock': countInStock,\n        'brand': brand,\n        'image': image,\n      });\n\n    try {\n        const response = await fetch('http://localhost:3000/product/create', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                'name': name,\n                'description': description,\n                'price': price,\n                'category': category,\n                'countInStock': countInStock,\n                'brand': brand,\n                'image': image,\n            })\n        });\n        \n\n        if (!response.ok) {\n            throw new Error('Failed to create product');\n        }\n        \n        console.log('Product Creation Successful');\n        const data = await response.json();\n\n    } catch (error) {\n        console.error('Error creating product:', error);\n    }\n\n};\n\nexport default useCreateProduct;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,KAAK,EAAEC,KAAK,KAAK;EAC/FC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;IACvB,MAAM,EAAER,IAAI;IACZ,aAAa,EAAEC,WAAW;IAC1B,OAAO,EAAEC,KAAK;IACd,UAAU,EAAEC,QAAQ;IACpB,cAAc,EAAEC,YAAY;IAC5B,OAAO,EAAEC,KAAK;IACd,OAAO,EAAEC;EACX,CAAC,CAAC;EAEJ,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB,MAAM,EAAEf,IAAI;QACZ,aAAa,EAAEC,WAAW;QAC1B,OAAO,EAAEC,KAAK;QACd,UAAU,EAAEC,QAAQ;QACpB,cAAc,EAAEC,YAAY;QAC5B,OAAO,EAAEC,KAAK;QACd,OAAO,EAAEC;MACb,CAAC;IACL,CAAC,CAAC;IAGF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IAEAV,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMU,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAEtC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZb,OAAO,CAACa,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACnD;AAEJ,CAAC;AAED,eAAerB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}