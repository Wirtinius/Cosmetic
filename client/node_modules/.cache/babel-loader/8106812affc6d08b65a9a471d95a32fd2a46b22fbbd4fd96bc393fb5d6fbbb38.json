{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nconst useUser = () => {\n  _s();\n  const [user, setUser] = useState('');\n  useEffect(() => {\n    try {\n      const accessToken = window.localStorage.getItem('accessToken');\n      if (!accessToken) {\n        throw new Error('Failed to fetch user');\n      }\n      setUser(jwtDecode(accessToken));\n      console.log(user.roles);\n    } catch (error) {\n      console.error('Error fetching user:', error);\n    }\n  }, []);\n};\n_s(useUser, \"7ubZgTuJ1mJ9pAGlCb8lUkIZULE=\");\nexport default useUser;","map":{"version":3,"names":["useEffect","useState","jwtDecode","useUser","_s","user","setUser","accessToken","window","localStorage","getItem","Error","console","log","roles","error"],"sources":["/Users/alen/Desktop/freelance/cosmetic/Cosmetic-example/client/src/pages/User/handler/userHandler.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\n\nconst useUser = () => {\n    const [user, setUser] = useState('');\n\n    useEffect(() => {\n        try {\n            const accessToken = window.localStorage.getItem('accessToken');\n\n            if (!accessToken) {\n                throw new Error('Failed to fetch user');\n            }\n\n            setUser(jwtDecode(accessToken));\n            console.log(user.roles)\n\n        } catch (error) {\n            console.error('Error fetching user:', error);\n        }\n\n    }, []);\n};\n\nexport default useUser;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,IAAI;MACA,MAAMO,WAAW,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAE9D,IAAI,CAACH,WAAW,EAAE;QACd,MAAM,IAAII,KAAK,CAAC,sBAAsB,CAAC;MAC3C;MAEAL,OAAO,CAACJ,SAAS,CAACK,WAAW,CAAC,CAAC;MAC/BK,OAAO,CAACC,GAAG,CAACR,IAAI,CAACS,KAAK,CAAC;IAE3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EAEJ,CAAC,EAAE,EAAE,CAAC;AACV,CAAC;AAACX,EAAA,CAnBID,OAAO;AAqBb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}