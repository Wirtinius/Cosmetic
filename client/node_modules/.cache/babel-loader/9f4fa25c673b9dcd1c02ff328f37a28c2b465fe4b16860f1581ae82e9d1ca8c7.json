{"ast":null,"code":"const useLogin = async (username, password) => {\n  console.log('Submitting:', {\n    username,\n    password\n  });\n  try {\n    const response = await fetch('http://localhost:3000/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const responseData = await response.json();\n    if (response.ok) {\n      window.localStorage.setItem('accessToken', responseData.accessToken);\n      console.log('User Login Successful');\n      window.location.href = \"./\";\n      return {\n        success: true\n      };\n    } else {\n      if (response.status === 400) {\n        return {\n          error: responseData\n        };\n      } else {\n        console.error('Login User failed:', responseData);\n        return {\n          error: 'Login User failed'\n        };\n      }\n    }\n  } catch (error) {\n    console.error('Error during user login:', error);\n  }\n};\nexport default useLogin;","map":{"version":3,"names":["useLogin","username","password","console","log","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","window","localStorage","setItem","accessToken","location","href","success","status","error"],"sources":["/Users/alen/Desktop/freelance/cosmetic/Cosmetic-example/client/src/pages/User/Login/handler/loginHandler.jsx"],"sourcesContent":["const useLogin = async (username, password) => {\n    console.log('Submitting:', {\n        username,\n        password\n    });\n\n\n    try {\n        const response = await fetch('http://localhost:3000/auth/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n              },\n            body: JSON.stringify({ username, password }),\n        });\n\n        const responseData = await response.json();\n\n        if (response.ok) {\n            window.localStorage.setItem('accessToken', responseData.accessToken);\n            console.log('User Login Successful');\n            window.location.href = \"./\";\n            return { success: true };\n        } else {\n            if (response.status === 400) {\n                return { error: responseData };\n            } else {\n                console.error('Login User failed:', responseData);\n                return { error: 'Login User failed' };\n            }\n        }\n\n        } catch (error) {\n            console.error('Error during user login:', error);\n        }\n};\n\nexport default useLogin;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC3CC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;IACvBH,QAAQ;IACRC;EACJ,CAAC,CAAC;EAGF,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MAClB,CAAC;MACHC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEC;MAAS,CAAC;IAC/C,CAAC,CAAC;IAEF,MAAMU,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAE1C,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACbC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEL,YAAY,CAACM,WAAW,CAAC;MACpEf,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCW,MAAM,CAACI,QAAQ,CAACC,IAAI,GAAG,IAAI;MAC3B,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC5B,CAAC,MAAM;MACH,IAAIhB,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;QACzB,OAAO;UAAEC,KAAK,EAAEX;QAAa,CAAC;MAClC,CAAC,MAAM;QACHT,OAAO,CAACoB,KAAK,CAAC,oBAAoB,EAAEX,YAAY,CAAC;QACjD,OAAO;UAAEW,KAAK,EAAE;QAAoB,CAAC;MACzC;IACJ;EAEA,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZpB,OAAO,CAACoB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EACpD;AACR,CAAC;AAED,eAAevB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}