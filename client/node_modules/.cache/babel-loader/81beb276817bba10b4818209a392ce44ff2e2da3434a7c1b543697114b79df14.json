{"ast":null,"code":"const useCreateProduct = async (name, description, price, category, countInStock, brand, image) => {\n  console.log('Submitting:', {\n    name,\n    description,\n    price,\n    category,\n    countInStock,\n    brand,\n    image: image.name // Just for logging\n  });\n  const formData = new FormData();\n  formData.append('name', name);\n  formData.append('description', description);\n  formData.append('price', price);\n  formData.append('category', category);\n  formData.append('countInStock', countInStock);\n  formData.append('brand', brand);\n  formData.append('image', image); // Assuming imageFile is the File object\n\n  try {\n    const response = await fetch('http://localhost:3000/product/create', {\n      method: 'POST',\n      body: formData // No headers needed, browser will set Content-Type for FormData\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create product');\n    }\n    console.log('Product Creation Successful');\n    const data = await response.json();\n  } catch (error) {\n    console.error('Error creating product:', error);\n  }\n};\nexport default useCreateProduct;","map":{"version":3,"names":["useCreateProduct","name","description","price","category","countInStock","brand","image","console","log","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","error"],"sources":["/Users/alen/Desktop/freelance/cosmetic/Cosmetic-example/client/src/pages/ProductForm/handler/createProductHandler.jsx"],"sourcesContent":["const useCreateProduct = async (name, description, price, category, countInStock, brand, image) => {\n    console.log('Submitting:', {\n        name,\n        description,\n        price,\n        category,\n        countInStock,\n        brand,\n        image: image.name, // Just for logging\n    });\n\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('description', description);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('countInStock', countInStock);\n    formData.append('brand', brand);\n    formData.append('image', image); // Assuming imageFile is the File object\n\n    try {\n        const response = await fetch('http://localhost:3000/product/create', {\n            method: 'POST',\n            body: formData, // No headers needed, browser will set Content-Type for FormData\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to create product');\n        }\n\n        console.log('Product Creation Successful');\n        const data = await response.json();\n\n    } catch (error) {\n        console.error('Error creating product:', error);\n    }\n};\n\nexport default useCreateProduct;\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,KAAK,EAAEC,KAAK,KAAK;EAC/FC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;IACvBR,IAAI;IACJC,WAAW;IACXC,KAAK;IACLC,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,KAAK,EAAEA,KAAK,CAACN,IAAI,CAAE;EACvB,CAAC,CAAC;EAEF,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;EAC7BS,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEV,WAAW,CAAC;EAC3CQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,KAAK,CAAC;EAC/BO,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAER,QAAQ,CAAC;EACrCM,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEP,YAAY,CAAC;EAC7CK,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,KAAK,CAAC;EAC/BI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,KAAK,CAAC,CAAC,CAAC;;EAEjC,IAAI;IACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN,QAAQ,CAAE;IACpB,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IAEAV,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMU,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAEtC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZb,OAAO,CAACa,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACnD;AACJ,CAAC;AAED,eAAerB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}